# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CwPaYub6Hj6LA7CQk2BZhYQ7m4gggxpS
"""

!pip install transformers torch sentence-transformers nltk
!pip install SpeechRecognition pyaudio
!pip install pydub

import nltk
from transformers import pipeline
from sentence_transformers import SentenceTransformer, util
import speech_recognition as sr
from pydub import AudioSegment
import os
from google.colab import files

# Download necessary NLTK resources
nltk.download('punkt')
nltk.download('stopwords')

import nltk
from transformers import pipeline
from sentence_transformers import SentenceTransformer, util
import speech_recognition as sr
from pydub import AudioSegment
import os
from google.colab import files

# Download necessary NLTK resources
nltk.download('punkt')
nltk.download('stopwords')

# Load the pre-trained model from Hugging Face
chatbot = pipeline("conversational", model="facebook/blenderbot-400M-distill")

# Load the pre-trained model from Hugging Face, using 'text-generation' task
chatbot = pipeline("text-generation", model="facebook/blenderbot-400M-distill")

def text_based_support():
    print("Welcome to the Virtual Customer Support System!")
    print("Type 'exit' to quit.")
    while True:
        user_input = input("You: ")
        if user_input.lower() == 'exit':
            print("Goodbye! Have a great day!")
            break
        bot_response = get_bot_response(user_input)
        print(f"Bot: {bot_response}")

def record_audio():
    """Function to record audio from the microphone"""
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        print("Please say something...")
        audio = recognizer.listen(source)
    try:
        print("Recognizing...")
        user_input = recognizer.recognize_google(audio)
        print(f"You said: {user_input}")
        return user_input
    except sr.UnknownValueError:
        print("Sorry, I could not understand the audio.")
        return ""
    except sr.RequestError:
        print("Sorry, there was an issue with the speech recognition service.")
        return ""

def speech_based_support():
    print("Welcome to the Virtual Customer Support System! Say 'exit' to quit.")
    while True:
        user_input = record_audio()
        if user_input.lower() == 'exit':
            print("Goodbye! Have a great day!")
            break
        bot_response = get_bot_response(user_input)
        print(f"Bot: {bot_response}")

def virtual_support_system():
    print("Choose your mode of interaction:")
    print("1. Text-based support")
    print("2. Speech-based support")
    mode = input("Enter '1' or '2': ")

    if mode == '1':
        text_based_support()
    elif mode == '2':
        speech_based_support()
    else:
        print("Invalid choice. Please choose '1' or '2'.")

virtual_support_system()

def get_bot_response(user_input):
    """
    Function to get a response from the chatbot based on user input
    """
    response = chatbot(user_input)
    return response[0]['generated_text']

!pip install SpeechRecognition
import speech_recognition as sr # attempt to import to ensure it is accessible